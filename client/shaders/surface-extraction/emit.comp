#version 450

#include "common.h"
#include "surface.h"

layout(set = 0, binding = 1) readonly restrict buffer FaceCounts {
    uint face_counts[];
};
layout(set = 0, binding = 2) writeonly restrict buffer Indirect {
    uint vertex_count;
    uint instance_count;
    uint first_vertex;
    uint first_index;
};
layout(set = 0, binding = 3) writeonly restrict buffer Surfaces {
    Surface surfaces[];
};
layout(push_constant) uniform Uniforms {
    uint offset;
};

void main() {
    uint count = face_counts[invocation_index()];
    if (gl_GlobalInvocationID == gl_NumWorkGroups - uvec3(1)) {
        vertex_count = count * 6; // two triangles per face
        instance_count = 1;
        first_vertex = offset * 6;
        first_index = 0;
    }

    Face info;
    if(!find_face(info)) return;
    surfaces[count - 1] = surface(info.voxel, info.axis, info.material);
}
